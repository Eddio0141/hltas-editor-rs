name: CI

on:
  push:
  pull_request:

jobs:
  build-linux:
    name: Build on Linux (${{ matrix.configuration }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: ["release", "debug"]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxcb-shape0-dev
          sudo apt-get install libxcb-xfixes0-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-unknown-linux-gnu
          override: true

      # better way to do this?
      - if: ${{ matrix.configuration == 'debug' }}
        name: Build
        run: cargo build --verbose
      - if: ${{ matrix.configuration == 'release' }}
        run: cargo build --release --verbose

      - uses: actions/upload-artifact@v2
        with:
          name: hltas-editor-rs-${{ runner.os }}-${{ matrix.configuration }}
          path: target/${{ matrix.configuration }}/hltas-editor-rs.so

  build-windows:
    name: Build on Windows (${{ matrix.configuration }})
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        configuration: ["release", "debug"]

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true

      - if: ${{ matrix.configuration == 'debug' }}
        name: Build
        run: cargo build --verbose
      - if: ${{ matrix.configuration == 'release' }}
        run: cargo build --release --verbose

      - uses: actions/upload-artifact@v2
        with:
          name: BunnymodXT-${{ runner.os }}-${{ matrix.configuration }}
          path: target\${{ matrix.configuration }}\hltas-editor-rs.exe
